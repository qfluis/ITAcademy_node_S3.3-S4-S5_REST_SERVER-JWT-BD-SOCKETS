/*
Buen trabajo, Luis! Algunas cosas a mejorar:

OK - La URL que devuelves en el /user deberia tener tambi√©n el http:// y eso, as√≠ se puede usar directamente

TODO: revisar con Omar, en principio est√° ok...
El /upload falla porque tienes un error tonta en la gesti√≥n de las fechas. 
Tambien est√°s eliminando el nombre original de la imagen, ojo con eso. 
Adem√°s, tal como lo tienes solo se puede subir una imagen por minuto o se sobreescriben 
(lo habitual es poner la fecha en milisegundos antes del nombre de la imagen y ya) ‚ö†

TODO: si no subes fichero o subes otra extensi√≥n da respuesta...
Al fallar el /upload el server devuelve un HTML de error. Hay que contemplar ese error ‚ùó
TODO: meter usuario y contrase√±a en .env
La autorizaci√≥n est√° rara. No compruebas el usuario y contrase√±a, solo que no esten en blanco. 
Tambi√©n falla si no hay body (HTML de error again). ¬øCu√°l de las dos cosas es la autorizaci√≥n? Habr√≠a que dejar solo una de las dos y hacer que compruebe algo

TODO: refactorizando
Habr√≠a que separar rutas, middlewares, controllers y dem√°s, tener todo eso en el app.js es una mala pr√°ctica de las gordas! ‚ùå
Dale un repaso a esas cosas para la m√°xima nota üòâ

*/
const Server = require('./models/server');
require('dotenv').config();

const server = new Server();
server.listen();




/* TODO: ELIMINAR

const express = require('express');
const app = express();
const bodyParser = require('body-parser');  // para leer body petici√≥n POST
const fileUpload = require('express-fileupload'); // otra opci√≥n multer: https://www.npmjs.com/package/multer 
const cors = require('cors');
const path = require('path');

app.use(bodyParser.json());

app.use(fileUpload({
    useTempFiles : true,
    tempFileDir : '/tmp/'
}));

const PORT = 5555;

*/










    


